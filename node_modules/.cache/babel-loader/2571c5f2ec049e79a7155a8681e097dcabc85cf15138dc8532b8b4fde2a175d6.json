{"ast":null,"code":"var _jsxFileName = \"/Users/joeyvandzura/projects/01-starting-project/src/components/InvestmentForm.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InvestmentForm() {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateHandler,\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = InvestmentForm;\nexport default InvestmentForm;\n\n// export default InvestmentForm = () => {\n\n//     const calculateHandler = (userInput) => {\n\n//         console.log(\"Working\");\n//         // Should be triggered when form is submitted\n//         // You might not directly want to bind it to the submit event on the form though...\n\n//         const yearlyData = []; // per-year results\n\n//         let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n//         const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n//         const expectedReturn = +userInput['expected-return'] / 100;\n//         const duration = +userInput['duration'];\n\n//         // The below code calculates yearly results (total savings, interest etc)\n//         for (let i = 0; i < duration; i++) {\n//           const yearlyInterest = currentSavings * expectedReturn;\n//           currentSavings += yearlyInterest + yearlyContribution;\n//           yearlyData.push({\n//             // feel free to change the shape of the data pushed to the array!\n//             year: i + 1,\n//             yearlyInterest: yearlyInterest,\n//             savingsEndOfYear: currentSavings,\n//             yearlyContribution: yearlyContribution,\n//           });\n//         }\n\n//         // do something with yearlyData ...\n//       };\n\n//     return (\n\n//     <form className=\"form\">\n\n//     <div className=\"input-group\">\n//       <p>\n//         <label htmlFor=\"current-savings\">Current Savings ($)</label>\n//         <input type=\"number\" id=\"current-savings\" />\n//       </p>\n//       <p>\n//         <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n//         <input type=\"number\" id=\"yearly-contribution\" />\n//       </p>\n//     </div>\n//     <div className=\"input-group\">\n//       <p>\n//         <label htmlFor=\"expected-return\">\n//           Expected Interest (%, per year)\n//         </label>\n//         <input type=\"number\" id=\"expected-return\" />\n//       </p>\n//       <p>\n//         <label htmlFor=\"duration\">Investment Duration (years)</label>\n//         <input type=\"number\" id=\"duration\" />\n//       </p>\n//     </div>\n\n//     <p className=\"actions\">\n//       <button type=\"reset\" className=\"buttonAlt\">\n//         Reset\n//       </button>\n//       <button onClick={calculateHandler} className=\"button\">\n//         Calculate\n//       </button>\n//     </p>\n\n//   </form>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"InvestmentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InvestmentForm","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","calculateHandler","_c","$RefreshReg$"],"sources":["/Users/joeyvandzura/projects/01-starting-project/src/components/InvestmentForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction InvestmentForm() {\n    return (\n    \n        <form className=\"form\">\n            \n        <div className=\"input-group\">\n          <p>\n            <label htmlFor=\"current-savings\">Current Savings ($)</label>\n            <input type=\"number\" id=\"current-savings\" />\n          </p>\n          <p>\n            <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n            <input type=\"number\" id=\"yearly-contribution\" />\n          </p>\n        </div>\n        <div className=\"input-group\">\n          <p>\n            <label htmlFor=\"expected-return\">\n              Expected Interest (%, per year)\n            </label>\n            <input type=\"number\" id=\"expected-return\" />\n          </p>\n          <p>\n            <label htmlFor=\"duration\">Investment Duration (years)</label>\n            <input type=\"number\" id=\"duration\" />\n          </p>\n        </div>\n    \n        <p className=\"actions\">\n          <button type=\"reset\" className=\"buttonAlt\">\n            Reset\n          </button>\n          <button onClick={calculateHandler} className=\"button\">\n            Calculate\n          </button>\n        </p>\n    \n      </form>\n      );\n}\n\nexport default InvestmentForm;\n\n// export default InvestmentForm = () => {\n\n//     const calculateHandler = (userInput) => {\n\n//         console.log(\"Working\");\n//         // Should be triggered when form is submitted\n//         // You might not directly want to bind it to the submit event on the form though...\n    \n//         const yearlyData = []; // per-year results\n    \n//         let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n//         const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n//         const expectedReturn = +userInput['expected-return'] / 100;\n//         const duration = +userInput['duration'];\n    \n//         // The below code calculates yearly results (total savings, interest etc)\n//         for (let i = 0; i < duration; i++) {\n//           const yearlyInterest = currentSavings * expectedReturn;\n//           currentSavings += yearlyInterest + yearlyContribution;\n//           yearlyData.push({\n//             // feel free to change the shape of the data pushed to the array!\n//             year: i + 1,\n//             yearlyInterest: yearlyInterest,\n//             savingsEndOfYear: currentSavings,\n//             yearlyContribution: yearlyContribution,\n//           });\n//         }\n    \n//         // do something with yearlyData ...\n//       };\n\n//     return (\n    \n//     <form className=\"form\">\n        \n//     <div className=\"input-group\">\n//       <p>\n//         <label htmlFor=\"current-savings\">Current Savings ($)</label>\n//         <input type=\"number\" id=\"current-savings\" />\n//       </p>\n//       <p>\n//         <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n//         <input type=\"number\" id=\"yearly-contribution\" />\n//       </p>\n//     </div>\n//     <div className=\"input-group\">\n//       <p>\n//         <label htmlFor=\"expected-return\">\n//           Expected Interest (%, per year)\n//         </label>\n//         <input type=\"number\" id=\"expected-return\" />\n//       </p>\n//       <p>\n//         <label htmlFor=\"duration\">Investment Duration (years)</label>\n//         <input type=\"number\" id=\"duration\" />\n//       </p>\n//     </div>\n\n//     <p className=\"actions\">\n//       <button type=\"reset\" className=\"buttonAlt\">\n//         Reset\n//       </button>\n//       <button onClick={calculateHandler} className=\"button\">\n//         Calculate\n//       </button>\n//     </p>\n\n//   </form>\n//   );\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}